import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ChatMemberUpdated, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
load_dotenv()
API_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not API_TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set. Please create a .env file with TELEGRAM_TOKEN=<your token>")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–º–∞–Ω–¥—É –º–µ–Ω—é ¬´–ü–æ—á–Ω–µ–º–æ¬ª
async def on_startup(dp: Dispatcher):
    await bot.set_my_commands([
        BotCommand(command="start", description="–ü–æ—á–Ω–µ–º–æ"),
    ])

# –®–ª—è—Ö–∏ –¥–æ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å
BASE_DIR = os.path.dirname(__file__)
IMAGE_PATHS = {
    'welcome': os.path.join(BASE_DIR, 'images', 'welcome.jpg'),
    'goal': os.path.join(BASE_DIR, 'images', 'goal.jpg'),
    'gender': os.path.join(BASE_DIR, 'images', 'gender.jpg'),
    'age': os.path.join(BASE_DIR, 'images', 'age.jpg'),
    'height': os.path.join(BASE_DIR, 'images', 'height.jpg'),
    'weight': os.path.join(BASE_DIR, 'images', 'weight.jpg'),
    'activity': os.path.join(BASE_DIR, 'images', 'activity.jpg'),
    'result': os.path.join(BASE_DIR, 'images', 'result.jpg')
}

# –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —á–∞—Ç—É
@dp.chat_member_handler()
async def welcome_new_user(chat_member: ChatMemberUpdated):
    if chat_member.chat.type == 'private' and chat_member.new_chat_member.status == 'member':
        chat_id = chat_member.chat.id
        try:
            with open(IMAGE_PATHS['welcome'], 'rb') as img:
                await bot.send_photo(chat_id, img,
                    caption="–í—ñ—Ç–∞—é –≤ –º–æ—î–º—É —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ñ. –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–ª–æ—Ä—ñ–π —Ç–∞ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –ø–æ—Ä–∞–¥–∏"
                )
        except FileNotFoundError:
            await bot.send_message(chat_id,
                "–í—ñ—Ç–∞—é –≤ –±–æ—Ç—ñ! –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫–∞–ª–æ—Ä—ñ—ó —Ç–∞ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏.")
        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton("üöÄ –ü–æ—á–Ω–µ–º–æ", callback_data="start_calc"))
        await bot.send_message(chat_id, "–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏:", reply_markup=kb)

# –°—Ç–∞–Ω–∏ FSM
class Form(StatesGroup):
    goal = State()
    gender = State()
    age = State()
    height = State()
    weight = State()
    activity = State()

# –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
def calculate_bmr(weight, height, age, gender):
    return 9.99 * weight + 6.25 * height - 4.92 * age + (5 if gender=='male' else -161)

def activity_factor(code):
    factors = {'1.2':1.2, '1.375':1.375, '1.55':1.55, '1.725':1.725, '1.9':1.9}
    return factors.get(code)

# –û–±—Ä–æ–±–Ω–∏–∫ ¬´–ù–∞ –ø–æ—á–∞—Ç–æ–∫¬ª
@dp.callback_query_handler(lambda c: c.data=='home', state='*')
async def go_home(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await cmd_start(callback.message, state)

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ (/start)
@dp.message_handler(commands=['start'], state='*')
async def cmd_start(message: types.Message, state: FSMContext=None):
    if state:
        await state.finish()
    try:
        with open(IMAGE_PATHS['welcome'], 'rb') as img:
            await bot.send_photo(message.chat.id, img,
                caption="–í—ñ—Ç–∞—é –≤ –º–æ—î–º—É —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ñ. –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–ª–æ—Ä—ñ–π —Ç–∞ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –ø–æ—Ä–∞–¥–∏")
    except FileNotFoundError:
        await message.answer("–í—ñ—Ç–∞—é –≤ –±–æ—Ç—ñ! –¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫–∞–ª–æ—Ä—ñ—ó —Ç–∞ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏.")
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("üöÄ –ü–æ—á–Ω–µ–º–æ", callback_data="start_calc"))
    await message.answer("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏:", reply_markup=kb)

# –ö—Ä–æ–∫ 1: –≤–∏–±—ñ—Ä –º–µ—Ç–∏
@dp.callback_query_handler(lambda c: c.data=='start_calc', state='*')
async def process_start(callback: types.CallbackQuery):
    await callback.answer()
    await show_goal(callback.message)
    await Form.goal.set()

async def show_goal(msg: types.Message):
    try:
        with open(IMAGE_PATHS['goal'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton("–°—Ö—É–¥–Ω—É—Ç–∏", callback_data="goal_loss"),
        InlineKeyboardButton("–ù–æ—Ä–º–∞ –∫–∞–ª–æ—Ä—ñ–π", callback_data="goal_maintain"),
        InlineKeyboardButton("–ù–∞–±—Ä–∞—Ç–∏", callback_data="goal_gain"),
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_goal"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–Ø–∫–∞ –í–∞—à–∞ —Ü—ñ–ª—å?", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_goal', state=Form.goal)
async def back_goal(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await cmd_start(callback.message, state)

@dp.callback_query_handler(lambda c: c.data.startswith('goal_'), state=Form.goal)
async def process_goal(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(goal=callback.data.split('_')[1])
    await show_gender(callback.message)
    await Form.gender.set()

# –ö—Ä–æ–∫ 2: —Å—Ç–∞—Ç—å
async def show_gender(msg: types.Message):
    try:
        with open(IMAGE_PATHS['gender'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("–ß–æ–ª–æ–≤—ñ–∫", callback_data="gender_male"),
        InlineKeyboardButton("–ñ—ñ–Ω–∫–∞", callback_data="gender_female"),
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_gender"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å:", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_gender', state=Form.gender)
async def back_gender(callback: types.CallbackQuery):
    await callback.answer()
    await show_goal(callback.message)
    await Form.goal.set()

@dp.callback_query_handler(lambda c: c.data.startswith('gender_'), state=Form.gender)
async def process_gender(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(gender=callback.data.split('_')[1])
    await show_age(callback.message)
    await Form.age.set()

# –ö—Ä–æ–∫ 3: –≤—ñ–∫
async def show_age(msg: types.Message):
    try:
        with open(IMAGE_PATHS['age'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_age"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–°–∫—ñ–ª—å–∫–∏ –í–∞–º —Ä–æ–∫—ñ–≤?", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_age', state=Form.age)
async def back_age(callback: types.CallbackQuery):
    await callback.answer()
    await show_gender(callback.message)
    await Form.gender.set()

@dp.message_handler(lambda m: m.text.isdigit(), state=Form.age)
async def process_age(message: types.Message, state: FSMContext):
    await state.update_data(age=int(message.text))
    await show_height(message)
    await Form.height.set()

# –ö—Ä–æ–∫ 4: –∑—Ä—ñ—Å—Ç
async def show_height(msg: types.Message):
    try:
        with open(IMAGE_PATHS['height'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_height"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–Ø–∫–∏–π –í–∞—à –∑—Ä—ñ—Å—Ç (—Å–º)?", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_height', state=Form.height)
async def back_height(callback: types.CallbackQuery):
    await callback.answer()
    await show_age(callback.message)
    await Form.age.set()

@dp.message_handler(lambda m: m.text.replace('.', '', 1).isdigit(), state=Form.height)
async def process_height(message: types.Message, state: FSMContext):
    await state.update_data(height=float(message.text))
    await show_weight(message)
    await Form.weight.set()

# –ö—Ä–æ–∫ 5: –≤–∞–≥–∞
async def show_weight(msg: types.Message):
    try:
        with open(IMAGE_PATHS['weight'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_weight"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–Ø–∫–∞ –í–∞—à–∞ –≤–∞–≥–∞ (–∫–≥)?", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_weight', state=Form.weight)
async def back_weight(callback: types.CallbackQuery):
    await callback.answer()
    await show_height(callback.message)
    await Form.height.set()

@dp.message_handler(lambda m: m.text.replace('.', '', 1).isdigit(), state=Form.weight)
async def process_weight(message: types.Message, state: FSMContext):
    await state.update_data(weight=float(message.text))
    await show_activity(message)
    await Form.activity.set()

# –ö—Ä–æ–∫ 6: –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
async def show_activity(msg: types.Message):
    try:
        with open(IMAGE_PATHS['activity'], 'rb') as img:
            await bot.send_photo(msg.chat.id, img)
    except FileNotFoundError:
        pass
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("–ú–∞–ª–æ—Ä—É—Ö–ª–∏–≤–∏–π (–æ—Ñ—ñ—Å–Ω–∞ —Ä–æ–±–æ—Ç–∞)", callback_data="act_1.2"),
        InlineKeyboardButton("–õ–µ–≥–∫–∞ (—Å–ø—Ä–∞–≤–∏ –ø–æ –¥–æ–º—É)", callback_data="act_1.375"),
        InlineKeyboardButton("–ü–æ–º—ñ—Ä–Ω–∞ (3‚Äì5 —Ç—Ä–µ–Ω—É–≤–∞–Ω—å/—Ç–∏–∂–¥–µ–Ω—å)", callback_data="act_1.55"),
        InlineKeyboardButton("–í–∏—Å–æ–∫–∞ (6‚Äì7 —Ç—Ä–µ–Ω—É–≤–∞–Ω—å/—Ç–∏–∂–¥–µ–Ω—å)", callback_data="act_1.725"),
        InlineKeyboardButton("–î—É–∂–µ –≤–∏—Å–æ–∫–∞ (—Ñ—ñ–∑–∏—á–Ω–∞ —Ä–æ–±–æ—Ç–∞ + —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è)", callback_data="act_1.9"),
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_activity"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await msg.answer("–û—Ü—ñ–Ω—ñ—Ç—å —Å–≤—ñ–π —Ä—ñ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data=='back_activity', state=Form.activity)
async def back_activity(callback: types.CallbackQuery):
    await callback.answer()
    await show_weight(callback.message)
    await Form.weight.set()

@dp.callback_query_handler(lambda c: c.data.startswith('act_'), state=Form.activity)
async def process_activity(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    code = callback.data.split('_')[1]
    data = await state.get_data()
    bmr = calculate_bmr(data['weight'], data['height'], data['age'], data['gender'])
    tdee = bmr * float(code)
    goal = data['goal']
    if goal=='loss': calories, purpose = tdee-500, '–¥–ª—è —Å—Ö—É–¥–Ω–µ–Ω–Ω—è'
    elif goal=='maintain': calories, purpose = tdee, '–¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏'
    else: calories, purpose = tdee+500, '–¥–ª—è –Ω–∞–±–æ—Ä—É'
    try:
        with open(IMAGE_PATHS['result'], 'rb') as img:
            await bot.send_photo(callback.message.chat.id, img,
                caption=f"–í–∞—à–∞ –¥–æ–±–æ–≤–∞ –Ω–æ—Ä–º–∞ {purpose}: {calories:.0f} –∫–∫–∞–ª.")
    except FileNotFoundError:
        await callback.message.reply(f"–í–∞—à–∞ –¥–æ–±–æ–≤–∞ –Ω–æ—Ä–º–∞ {purpose}: {calories:.0f} –∫–∫–∞–ª.")
    # –ö–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É
    kb = InlineKeyboardMarkup()
    kb.add(
        InlineKeyboardButton("üîÑ –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", callback_data="start_calc"),
        InlineKeyboardButton("üè† –ù–∞ –ø–æ—á–∞—Ç–æ–∫", callback_data="home")
    )
    await callback.message.answer("–©–æ –±–∞–∂–∞—î—Ç–µ –¥–∞–ª—ñ?", reply_markup=kb)
    await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
